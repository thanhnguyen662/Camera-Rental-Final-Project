generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id              Int      @id @default(autoincrement())
  name            String?
  description     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  slug            String   @unique
  firebaseId      String?
  brand           String?
  price           String?
  qualityRate     Int?
  stock           Int?
  productPhotoURL String?
  User            User?    @relation(fields: [firebaseId], references: [firebaseId])
  carts           Cart[]

  @@map("Products")
}

model User {
  age           Int?
  firebaseId    String    @id
  gender        String?
  address       String?
  favouriteGear String?
  rate          Int?      @default(0)
  description   String?
  hasTag        String?
  photoURL      String?
  carts         Cart[]
  products      Product[]

  @@map("Users")
}

model Conversation {
  id        Int       @id @default(autoincrement())
  members   String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]

  @@map("Conversations")
}

model Message {
  id             Int          @id @default(autoincrement())
  text           String?
  conversationId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  sender         String
  conversations  Conversation @relation(fields: [conversationId], references: [id])

  @@map("Messages")
}

model Cart {
  id         Int       @id @default(autoincrement())
  startDate  DateTime?
  endDate    DateTime?
  firebaseId String?
  productId  Int?
  User       User?     @relation(fields: [firebaseId], references: [firebaseId])
  Product    Product?  @relation(fields: [productId], references: [id])

  @@map("Carts")
}
